% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.R
\name{create_network}
\alias{create_network}
\title{Build a small-world network from a set of agents}
\usage{
create_network(agents, dim, nei, p)
}
\arguments{
\item{agents}{A data frame where each row is an agent and the columns
represent:
\itemize{
\item \code{age}: the age in years
\item \code{sex}: The sex (a factor with levels "M" and "F")
\item \code{med_cond}: Logical, does the agent have a pre-existing medical
condition?
\item \code{seir_status}: An ordered factor indicating SEIR status ("S", "E", "I",
or "R")
\item \code{sympt}: Logical, if the agent is infected (\code{seir_status} "I"),
are they exhibiting symptoms of COVID-19?
}}

\item{dim}{Dimension of the network. Should be 1. The number of
vertices is
\ifelse{html}{\out{<i>N</i><sup><i>d</i></sup>}}{\eqn{\eqn{N^d}}{_N^d_)}},
where \emph{N} is the number of agents (\code{nrow(agents)}) and \emph{d} is the dimension.
For multidimensional arrays, neighborhoods are calaculated along all axes.}

\item{nei}{Network distance (around a ring or hyper-torus) that will be
connected by neighbor links. If \code{nei} is 2, then the small world
network is initialized with edges to neighbors and neighbors-of-neighbors
in each direction and dimension.}

\item{p}{The probability of rewiring an edge. Small worlds start out with
dense connections between neighbors (up to separation-degree \code{nei}),
and then a random subset, chosen with probabilty \code{p} is rewired to random
vertices.}
}
\value{
An iGraph network, where vertices have attributes corresponding to
the columns of the \code{agents} data frame.
}
\description{
Given a set of agents, build a small-world network and give each vertex the
attributes of one of the agents
}
\examples{
n_agt <- 20
agents <- create_agends(age = runif(n_agt, max = 90),
  sex = sample(c("F", "M"), n_agt, replace = TRUE),
  med_cond = rbernoulli(n_agt, 0.20),
  seir_status = sample(c("S", "E", "I", "R"), replace = TRUE,
    prob = c(0.9, 0.05, 0.05, 0.0)),
  sympt = rbernoulli(n_agt, 0.5))
network <- create_network(agents, 1, 5, 0.05)
}
