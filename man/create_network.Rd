% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.R
\name{create_network}
\alias{create_network}
\title{Build a network from a set of agents}
\usage{
create_network(
  agents,
  nw_type,
  nw_frequency,
  nw_intensity,
  topology,
  nei,
  p,
  ba_dist = NULL,
  ba_seq = NULL,
  ba_zero_appeal = 1,
  ba_out_pref = FALSE
)
}
\arguments{
\item{agents}{A data.table where each row is an agent and the columns
include a variable "id" that serves as a unique ID for the agent.}

\item{nw_type}{A description of the type of network. This
is purely descriptive and doesn't affect the creation of the network.}

\item{nw_frequency}{The mean frequency of contact (per time step) for this
kind of network contact.}

\item{nw_intensity}{The intensity of contact for this kind of network
contact. Should be a real number between 0 and 1 indicating the intensity
of close personal contact.}

\item{nei}{Network distance (around a ring or hyper-torus) that will be
connected by neighbor links in small-world networks.
If \code{nei} is 2, then the small world
network is initialized with edges to neighbors and neighbors-of-neighbors
in each direction and dimension.
For preferential attachment (or BA) networks, \code{nei} is the number of edges
to add in each time step while constructing the network.}

\item{p}{For small world networks, this is the probability of rewiring an
edge. For preferential attachment (or BA) networks, \code{p} is the power of
preferential attachment (1 for linear preferential attachment).

Small worlds start out with dense connections between neighbors
(up to separation-degree \code{nei}), and then a random subset, chosen with
robabilty \code{p} is rewired to random vertices.

Preferential attachment networks, start with no edges and \code{nei} edges
are added at each step, with the preference for attaching to another
vertex given by
\ifelse{html}{\out{<i>P<sub>i</sub> ~ k<sub>i</sub><sup>p</sup> +
  a</i>}}{\deqn{P_i ~ k_i^p + a}}
where \ifelse{html}{\out{<i>k<sub>i</sub>}}{\eqn{k_i}} is the number of
edges originating at other vertices that connect to vertex \emph{i},
\emph{p} is the preferential attachment power (1 for linear preference), and
\emph{a} is the affinity for unconnected vertices (which we set to 1).}
}
\value{
A list of the network and a data table with one row corresponding to
each edge of the network.
}
\description{
Given a set of agents, build a network and give each vertex the
attributes of one of the agents
}
\examples{
\dontrun{
n_agt <- 20
agents <- create_agents(age = runif(n_agt, max = 90),
  sex = sample(c("F", "M"), n_agt, replace = TRUE),
  med_cond = purrr::rbernoulli(n_agt, 0.20),
  seir_status = sample(c("S", "E", "I", "R"), replace = TRUE,
    prob = c(0.9, 0.05, 0.05, 0.0)),
  sympt = purrr::rbernoulli(n_agt, 0.5))
network <- create_network(agents, 1, 5, 0.05)
}
}
\keyword{internal}
